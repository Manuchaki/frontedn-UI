{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk to fetch history\nexport const fetchHistory = createAsyncThunk('history/fetchHistory', async (token, {\n  rejectWithValue\n}) => {\n  try {\n    // Replace this with your actual API call\n    const response = await Promise.resolve([{\n      id: 1,\n      name: 'Mock History Entry'\n    }]);\n    return response;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\nconst historySlice = createSlice({\n  name: 'history',\n  initialState: {\n    history: [],\n    error: null,\n    loading: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchHistory.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchHistory.fulfilled, (state, action) => {\n      state.loading = false;\n      state.history = action.payload;\n    }).addCase(fetchHistory.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default historySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchHistory","token","rejectWithValue","response","Promise","resolve","id","name","err","message","historySlice","initialState","history","error","loading","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/manuchaki/Downloads/frontend-ui/src/store/historySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\n// Async thunk to fetch history\nexport const fetchHistory = createAsyncThunk('history/fetchHistory', async (token, { rejectWithValue }) => {\n  try {\n    // Replace this with your actual API call\n    const response = await Promise.resolve([{ id: 1, name: 'Mock History Entry' }]);\n    return response;\n  } catch (err) {\n    return rejectWithValue(err.message);\n  }\n});\n\nconst historySlice = createSlice({\n  name: 'history',\n  initialState: {\n    history: [],\n    error: null,\n    loading: false,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchHistory.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchHistory.fulfilled, (state, action) => {\n        state.loading = false;\n        state.history = action.payload;\n      })\n      .addCase(fetchHistory.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport default historySlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;;AAEhE;AACA,OAAO,MAAMC,YAAY,GAAGD,gBAAgB,CAAC,sBAAsB,EAAE,OAAOE,KAAK,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACzG,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMC,OAAO,CAACC,OAAO,CAAC,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAqB,CAAC,CAAC,CAAC;IAC/E,OAAOJ,QAAQ;EACjB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACZ,OAAON,eAAe,CAACM,GAAG,CAACC,OAAO,CAAC;EACrC;AACF,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAGZ,WAAW,CAAC;EAC/BS,IAAI,EAAE,SAAS;EACfI,YAAY,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,IAAI;IACXC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,YAAY,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACP,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDK,OAAO,CAAClB,YAAY,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAClDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACR,OAAO,GAAGU,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDL,OAAO,CAAClB,YAAY,CAACwB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeb,YAAY,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}